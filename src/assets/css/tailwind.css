/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  --tw-backdrop-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-opacity: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

:root {
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  --p: 188 91.4% 31.8%;
  --pf: 189 88% 26.1%;
  --pc: 0 0% 100%;
  --s: 209 17.4% 52.5%;
  --sf: 207 25% 28.2%;
  --sc: 0 0% 100%;
  --a: 200 27.3% 97.8%;
  --af: 210 5.3% 85.1%;
  --ac: 0 0% 100%;
  --n: 219 14.1% 27.8%;
  --nf: 222 13.4% 19%;
  --nc: 0 0% 100%;
  --b1: 0 0% 100%;
  --b2: 210 20% 98%;
  --b3: 216 12.2% 83.9%;
  --bc: 215 27.9% 16.9%;
  --in: 207 89.8% 53.9%;
  --su: 174 100% 29%;
  --wa: 36 100% 50%;
  --er: 14 100% 57.1%;
}

.avatar {
  display: inline-flex;
  position: relative;
}

.avatar>div {
  display: block;
  overflow: hidden;
}

.avatar img {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%;
}

.avatar.placeholder>div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn {
  border-color: transparent;
  border-color: hsla(var(--n)/var(--tw-border-opacity,1));
  cursor: pointer;
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  border-radius: var(--rounded-btn,.5rem);
  height: 3rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 2;
  padding-left: 1rem;
  padding-right: 1rem;
  min-height: 3rem;
  font-weight: 600;
  text-transform: uppercase;
  text-transform: var(--btn-text-case,uppercase);
  border-width: var(--border-btn,1px);
  -webkit-animation: button-pop var(--animation-btn,.25s) ease-out;
  animation: button-pop var(--animation-btn,.25s) ease-out;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
}

.btn:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.btn-disabled,.btn[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 0;
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

.btn-square {
  height: 3rem;
  padding: 0;
  width: 3rem;
}

.btn.loading,.btn.loading:hover {
  pointer-events: none;
}

.btn.loading:before {
  border-radius: 9999px;
  border-width: 2px;
  height: 1rem;
  margin-right: .5rem;
  width: 1rem;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
  content: "";
  border-color: transparent currentColor currentColor transparent;
}

@media (prefers-reduced-motion:reduce) {
  .btn.loading:before {
    -webkit-animation: spin 10s linear infinite;
    animation: spin 10s linear infinite;
  }
}

@-webkit-keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}

.btn-group>input[type=radio].btn {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.btn-group>input[type=radio].btn:before {
  content: attr(data-title);
}

.drawer {
  display: grid;
  overflow: hidden;
}

.drawer.drawer-end .drawer-toggle~.drawer-side>.drawer-overlay+* {
  justify-self: end;
  --tw-translate-x: 100%;
}

.drawer.drawer-end .drawer-toggle:checked~.drawer-side>.drawer-overlay+* {
  --tw-translate-x: 0px;
}

.drawer-toggle~.drawer-content {
  max-height: 100vh;
  overflow-y: auto;
  grid-column-start: 1;
  grid-row-start: 1;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: .15s;
  transition-duration: .3s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
}

@media (min-width:1024px) {
  .drawer-mobile {
    grid-auto-columns: -webkit-max-content auto;
    grid-auto-columns: max-content auto;
  }

  .drawer-mobile>.drawer-toggle~.drawer-content {
    height: auto;
  }

  @media (min-width:1024px) {
    .drawer-mobile>.drawer-toggle~.drawer-content {
      grid-column-start: 2;
    }
  }

  @media (min-width:1024px) {
    .drawer-mobile>.drawer-toggle~.drawer-side>.drawer-overlay {
      visibility: visible;
    }
  }

  @media (min-width:1024px) {
    .drawer-mobile>.drawer-toggle~.drawer-side>.drawer-overlay+* {
      --tw-translate-x: 0px;
    }
  }

  .drawer-mobile>.drawer-toggle~.drawer-side {
    overflow-y: auto;
  }

  .drawer-mobile>.drawer-toggle:checked~.drawer-content {
    --tw-translate-x: 0px;
  }
}

.dropdown {
  display: inline-block;
  position: relative;
}

.dropdown>:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown .dropdown-content {
  opacity: 0;
  position: absolute;
  visibility: hidden;
  z-index: 50;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-x: .95;
  --tw-scale-y: 1;
  --tw-scale-y: .95;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform-origin: top;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
}

.dropdown-end .dropdown-content {
  right: 0;
}

.dropdown-left .dropdown-content {
  top: 0;
  bottom: auto;
  right: 100%;
  transform-origin: right;
}

.dropdown-right .dropdown-content {
  top: 0;
  bottom: auto;
  left: 100%;
  transform-origin: left;
}

.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}

.dropdown-end.dropdown-right .dropdown-content {
  bottom: 0;
  top: auto;
}

.dropdown-end.dropdown-left .dropdown-content {
  bottom: 0;
  top: auto;
}

.dropdown.dropdown-hover:hover .dropdown-content,.dropdown.dropdown-open .dropdown-content,.dropdown:not(.dropdown-hover):focus-within .dropdown-content,.dropdown:not(.dropdown-hover):focus .dropdown-content {
  opacity: 1;
  visibility: visible;
}

.link {
  cursor: pointer;
  text-decoration: underline;
}

.menu {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.menu.horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu.horizontal li {
  flex-direction: row;
}

.menu li {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.menu li>a,.menu li>span {
  display: flex;
  align-items: center;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  padding: .75rem 1.25rem;
  color: currentColor;
}

.menu li>a {
  cursor: pointer;
}

.menu li>a:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li.disabled>a,.menu li.disabled>span {
  cursor: auto;
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding,.5rem);
}

.navbar>* {
  display: flex;
  align-items: center;
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
}

.toggle~.toggle-mark {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  --tw-border-opacity: 1;
  --tw-border-opacity: 0.2;
  border-color: hsla(var(--bc)/var(--tw-border-opacity,1));
  border-width: 1px;
  height: 1.5rem;
  width: 3rem;
  border-radius: var(--rounded-badge,1.9rem);
}

.toggle~.toggle-mark:before {
  display: block;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  content: "";
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
  height: 1.25rem;
  margin: 1px;
  width: 1.25rem;
  border-radius: var(--rounded-badge,1.9rem);
  -webkit-animation: togglemark-off var(--animation-input,.4s) ease-in-out;
  animation: togglemark-off var(--animation-input,.4s) ease-in-out;
}

.toggle:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.avatar-group .avatar {
  --tw-border-opacity: 1;
  border-color: hsla(var(--b1)/var(--tw-border-opacity,1));
  border-radius: 9999px;
  border-width: 4px;
  overflow: hidden;
}

.btn .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  border-color: transparent;
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

.btn .badge-outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b2)/var(--tw-text-opacity,1));
}

.btn:active:focus,.btn:active:hover {
  -webkit-animation: none;
  animation: none;
  transform: scale(var(--btn-focus-scale,.95));
}

.btn-active,.btn:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--nf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--nf)/var(--tw-border-opacity,1));
}

.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--nf));
}

.btn.glass.btn-active,.btn.glass:hover {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn.glass:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.btn.loading.btn-circle:before,.btn.loading.btn-square:before {
  margin-right: 0;
}

.btn.loading.btn-lg:before,.btn.loading.btn-xl:before {
  height: 1.25rem;
  width: 1.25rem;
}

.btn.loading.btn-sm:before,.btn.loading.btn-xs:before {
  height: .75rem;
  width: .75rem;
}

.btn-group>.btn-active,.btn-group>input[type=radio]:checked.btn {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}

.btn-group>.btn-active:focus-visible,.btn-group>input[type=radio]:checked.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--p));
}

.btn-group>.btn:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: -1px;
}

.btn-group>.btn:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

@-webkit-keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale,.95));
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale,.95));
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}

@-webkit-keyframes checkmark {
  30% {
    transform: rotate(45deg)translate(-1px,-1px)scale(1.2);
  }

  50% {
    transform: rotate(45deg)translate(-1px,-1px)scale(.8);
  }

  to {
    transform: rotate(45deg)translate(-1px,-1px)scale(1);
  }

  30% {
    transform: rotate(45deg)translate(-1px,-1px)scale(1.2);
  }

  50% {
    transform: rotate(45deg)translate(-1px,-1px)scale(.8);
  }

  to {
    transform: rotate(45deg)translate(-1px,-1px)scale(1);
  }
}

@keyframes checkmark {
  30% {
    transform: rotate(45deg)translate(-1px,-1px)scale(1.2);
  }

  50% {
    transform: rotate(45deg)translate(-1px,-1px)scale(.8);
  }

  to {
    transform: rotate(45deg)translate(-1px,-1px)scale(1);
  }

  30% {
    transform: rotate(45deg)translate(-1px,-1px)scale(1.2);
  }

  50% {
    transform: rotate(45deg)translate(-1px,-1px)scale(.8);
  }

  to {
    transform: rotate(45deg)translate(-1px,-1px)scale(1);
  }
}

.drawer.drawer-end .drawer-toggle:checked~.drawer-content {
  --tw-translate-x: -0.5rem;
}

.drawer-toggle:checked~.drawer-content {
  --tw-translate-x: 0.5rem;
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--nf));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-primary {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--p));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-secondary {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--s));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-accent {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--a));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-info {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--in));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-success {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--su));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-warning {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--wa));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-error {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--er));
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.glass {
  box-shadow: 0 0 0 2px currentColor;
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-ghost {
  box-shadow: 0 0 0 2px currentColor;
}

.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-link {
  box-shadow: 0 0 0 2px currentColor;
}

.dropdown.dropdown-hover:hover .dropdown-content,.dropdown.dropdown-open .dropdown-content,.dropdown:focus-within .dropdown-content,.dropdown:focus .dropdown-content {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.link:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}

.menu.horizontal li.bordered>a,.menu.horizontal li.bordered>span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  border-left-width: 0;
  border-bottom-width: 4px;
}

.menu[class*=p-] li a {
  border-radius: var(--rounded-btn,.5rem);
}

.menu li>a:focus,.menu li>a:hover {
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.1;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
}

.menu li>a.active {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}

.menu li>a:active {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}

.menu li.disabled>a:hover,.menu li.disabled>span:hover {
  background-color: transparent;
}

.menu li.bordered a,.menu li.bordered span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  border-left-width: 4px;
}

.menu li.hover-bordered a {
  border-color: transparent;
  border-left-width: 4px;
}

.menu li.hover-bordered a:hover {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
}

.menu ul {
  padding-left: 1.5rem;
}

.menu.compact li>a,.menu.compact li>span {
  font-size: .875rem;
  line-height: 1.25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
}

.menu .menu-title>a,.menu .menu-title>span {
  font-weight: 700;
  font-size: .75rem;
  line-height: 1rem;
  padding-top: .25rem;
  padding-bottom: .25rem;
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.4;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

.toggle {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;
}

.toggle:checked:focus-visible~.toggle-mark,.toggle:checked:hover:focus-visible~.toggle-mark,.toggle:focus-visible~.toggle-mark {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--bc));
}

.toggle:checked:hover~.toggle-mark,.toggle:checked~.toggle-mark {
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--bc)/var(--tw-border-opacity,1));
}

.toggle:checked:hover~.toggle-mark:before,.toggle:checked~.toggle-mark:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
  --tw-translate-x: 0;
  --tw-translate-x: 1.5rem;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  -webkit-animation: togglemark-on var(--animation-input,.4s) ease-in-out;
  animation: togglemark-on var(--animation-input,.4s) ease-in-out;
}

[dir=rtl] .toggle:checked:hover~.toggle-mark:before,[dir=rtl] .toggle:checked~.toggle-mark:before {
  --tw-translate-x: -1.5rem;
}

.toggle:disabled:hover~.toggle-mark,.toggle:disabled~.toggle-mark {
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
  border-color: transparent;
  cursor: not-allowed;
}

.toggle:disabled:hover~.toggle-mark:before,.toggle:disabled~.toggle-mark:before {
  border-color: transparent;
}

.toggle:disabled:checked~.toggle-mark:before,.toggle:disabled:hover:checked~.toggle-mark:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--b1)/var(--tw-border-opacity,1));
}

@-webkit-keyframes togglemark-off {
  50% {
    margin-left: 0;
  }
}

@keyframes togglemark-off {
  50% {
    margin-left: 0;
  }
}

@-webkit-keyframes togglemark-on {
  50% {
    margin-left: 2px;
  }
}

@keyframes togglemark-on {
  50% {
    margin-left: 2px;
  }
}

.rounded-box {
  border-radius: var(--rounded-box,1rem);
}

.btn-square.btn-xs {
  height: 1.5rem;
  padding: 0;
  width: 1.5rem;
}

.btn-square.btn-sm {
  height: 2rem;
  padding: 0;
  width: 2rem;
}

.btn-square.btn-md {
  height: 3rem;
  padding: 0;
  width: 3rem;
}

.btn-square.btn-lg {
  height: 4rem;
  padding: 0;
  width: 4rem;
}

.avatar.online:before {
  content: "";
  --tw-bg-opacity: 1;
  background-color: hsla(var(--su)/var(--tw-bg-opacity,1));
  border-radius: 9999px;
  display: block;
  height: .5rem;
  position: absolute;
  width: .5rem;
  z-index: 10;
  top: 5%;
  right: 5%;
  box-shadow: 0 0 0 2px hsl(var(--b1));
}

.avatar.offline:before {
  content: "";
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b3)/var(--tw-bg-opacity,1));
  border-radius: 9999px;
  display: block;
  height: .5rem;
  position: absolute;
  width: .5rem;
  z-index: 10;
  top: 5%;
  right: 5%;
  box-shadow: 0 0 0 2px hsl(var(--b1));
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.-top-1 {
  top: -0.25rem;
}

.-right-1 {
  right: -0.25rem;
}

.top-0 {
  top: 0px;
}

.left-0 {
  left: 0px;
}

.top-3 {
  top: 0.75rem;
}

.right-7 {
  right: 1.75rem;
}

.left-3 {
  left: 0.75rem;
}

.bottom-4 {
  bottom: 1rem;
}

.m-1 {
  margin: 0.25rem;
}

.m-0 {
  margin: 0px;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-5 {
  margin-left: 1.25rem;
  margin-right: 1.25rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mr-4 {
  margin-right: 1rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mr-6 {
  margin-right: 1.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-3 {
  margin-left: 0.75rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mr-3 {
  margin-right: 0.75rem;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-5 {
  height: 1.25rem;
}

.h-10 {
  height: 2.5rem;
}

.h-screen {
  height: 100vh;
}

.h-7 {
  height: 1.75rem;
}

.h-9 {
  height: 2.25rem;
}

.h-8 {
  height: 2rem;
}

.h-full {
  height: 100%;
}

.min-h-\[112px\] {
  min-height: 112px;
}

.w-5 {
  width: 1.25rem;
}

.w-52 {
  width: 13rem;
}

.w-10 {
  width: 2.5rem;
}

.w-full {
  width: 100%;
}

.w-56 {
  width: 14rem;
}

.w-7 {
  width: 1.75rem;
}

.w-1\/2 {
  width: 50%;
}

.w-\[55\%\] {
  width: 55%;
}

.w-\[45\%\] {
  width: 45%;
}

.w-10\/12 {
  width: 83.333333%;
}

.w-2\/12 {
  width: 16.666667%;
}

.min-w-\[110px\] {
  min-width: 110px;
}

.max-w-\[140px\] {
  max-width: 140px;
}

.max-w-\[100px\] {
  max-width: 100px;
}

.max-w-\[110px\] {
  max-width: 110px;
}

.max-w-\[145px\] {
  max-width: 145px;
}

.flex-none {
  flex: none;
}

.flex-1 {
  flex: 1 1 0%;
}

.-translate-x-full {
  --tw-translate-x: -100%;
  transform: var(--tw-transform);
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: var(--tw-transform);
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-b-\[1px\] {
  border-bottom-width: 1px;
}

.border-secondary {
  --tw-border-opacity: 1;
  border-color: hsla(var(--s) / var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-primary {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p) / var(--tw-border-opacity));
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.border-accent-focus {
  --tw-border-opacity: 1;
  border-color: hsla(var(--af) / var(--tw-border-opacity));
}

.bg-accent {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--a) / var(--tw-bg-opacity));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 250, 229, var(--tw-bg-opacity));
}

.bg-accent-focus {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--af) / var(--tw-bg-opacity));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-3 {
  padding: 0.75rem;
}

.p-0 {
  padding: 0px;
}

.p-1 {
  padding: 0.25rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-11 {
  padding-left: 2.75rem;
  padding-right: 2.75rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pr-4 {
  padding-right: 1rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.text-center {
  text-align: center;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.font-extrabold {
  font-weight: 800;
}

.font-medium {
  font-weight: 500;
}

.uppercase {
  text-transform: uppercase;
}

.leading-\[1\.55\] {
  line-height: 1.55;
}

.text-secondary {
  --tw-text-opacity: 1;
  color: hsla(var(--s) / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-secondary-focus {
  --tw-text-opacity: 1;
  color: hsla(var(--sf) / var(--tw-text-opacity));
}

.text-green-700 {
  --tw-text-opacity: 1;
  color: rgba(4, 120, 87, var(--tw-text-opacity));
}

.text-primary {
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity));
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-4 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-secondary {
  --tw-ring-opacity: 1;
  --tw-ring-color: hsla(var(--s) / var(--tw-ring-opacity));
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@media (min-width: 768px) {
  .md\:flex-nowrap {
    flex-wrap: nowrap;
  }

  .md\:p-4 {
    padding: 1rem;
  }

  .md\:px-11 {
    padding-left: 2.75rem;
    padding-right: 2.75rem;
  }

  .md\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

@media (min-width: 1280px) {
  .xl\:relative {
    position: relative;
  }

  .xl\:m-4 {
    margin: 1rem;
  }

  .xl\:-mx-4 {
    margin-left: -1rem;
    margin-right: -1rem;
  }

  .xl\:my-1 {
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
  }

  .xl\:mt-0 {
    margin-top: 0px;
  }

  .xl\:ml-auto {
    margin-left: auto;
  }

  .xl\:block {
    display: block;
  }

  .xl\:flex {
    display: flex;
  }

  .xl\:hidden {
    display: none;
  }

  .xl\:h-full {
    height: 100%;
  }

  .xl\:min-h-\[600px\] {
    min-height: 600px;
  }

  .xl\:w-1\/12 {
    width: 8.333333%;
  }

  .xl\:w-\[58\%\] {
    width: 58%;
  }

  .xl\:w-1\/3 {
    width: 33.333333%;
  }

  .xl\:w-2\/3 {
    width: 66.666667%;
  }

  .xl\:w-1\/2 {
    width: 50%;
  }

  .xl\:transform-none {
    transform: none;
  }

  .xl\:justify-end {
    justify-content: flex-end;
  }

  .xl\:border-b-0 {
    border-bottom-width: 0px;
  }

  .xl\:border-r-\[1px\] {
    border-right-width: 1px;
  }

  .xl\:bg-accent {
    --tw-bg-opacity: 1;
    background-color: hsla(var(--a) / var(--tw-bg-opacity));
  }

  .xl\:p-0 {
    padding: 0px;
  }

  .xl\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .xl\:pr-5 {
    padding-right: 1.25rem;
  }

  .xl\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .xl\:text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .xl\:shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}